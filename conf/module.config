process {
  errorStrategy = { task.exitStatus in 130..140 ? 'retry' : 'terminate' }
  maxRetries = 5
  memory = { 500.MB * task.attempt }
  //default memory for all processes

  publishDir = [
      path: { "${params.out_dir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
      mode: "link",
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
  ]

  withName: IMAGING_MICROALIGNER {
    cpus = 30
    memory = { 20.GB * task.attempt }
  }

  withName: TO_SPATIALDATA {
    ext.args = "--feature_col 'Name'  --expansion_in_pixels 80 --save_label_img True --raw_image_channels_to_save [0] "
    memory = { 20.GB * task.attempt }
  }

  withName: IMAGING_TILEDSPOTIFLOW {
    memory = { 20.GB * task.attempt }
    //clusterOptions = '-gpu "mode=shared:j_exclusive=no:num=1:gmem=2048"'
  }

  withName: IMAGING_CELLPOSE {
    memory = { 20.GB * task.attempt }
    //clusterOptions = '-gpu "mode=shared:j_exclusive=no:num=1:gmem=3072"'
  }

  withName: IMAGING_POSTCODE {
    memory = { 20.GB * task.attempt }
    ext.args = '--codebook_target_col Gene --codebook_code_col Code --coding_col_prefix \'cycle\\d_channel\\d_+\''
  }

  withName: MERGEPEAKS {
    memory = { 20.GB * task.attempt }
  }

  withName: 'RUN_QC_DOWNSTREAM' {
      storeDir: { "${params.out_dir}/reports" }
      ext.prefix = { "${notebook.baseName}" }
      ext.args = { "--metadata subtitle:'Sample: ${meta.id}'" }
      container = 'docker.io/cavenel/iss_qc_downstream:0.0.5'
  }
  
  withLabel: large_mem {
    memory = { 200.GB * task.attempt }
  }

  withLabel: medium_mem {
    memory = { 100.GB * task.attempt }
  }
}
